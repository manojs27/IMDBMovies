// Generated by Dagger (https://google.github.io/dagger).
package com.manoj.movies.movielist.model;

import com.manoj.movies.movielist.MainActivity;
import com.manoj.movies.movielist.view.MainView;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MovieListModule_ProvideViewFactory implements Factory<MainView> {
  private final MovieListModule module;

  private final Provider<MainActivity> activityProvider;

  public MovieListModule_ProvideViewFactory(
      MovieListModule module, Provider<MainActivity> activityProvider) {
    this.module = module;
    this.activityProvider = activityProvider;
  }

  @Override
  public MainView get() {
    return Preconditions.checkNotNull(
        module.provideView(activityProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static MovieListModule_ProvideViewFactory create(
      MovieListModule module, Provider<MainActivity> activityProvider) {
    return new MovieListModule_ProvideViewFactory(module, activityProvider);
  }

  public static MainView proxyProvideView(MovieListModule instance, MainActivity activity) {
    return Preconditions.checkNotNull(
        instance.provideView(activity), "Cannot return null from a non-@Nullable @Provides method");
  }
}
